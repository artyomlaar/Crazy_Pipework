
print_log () {
	sed s/^/out:printc:/ < ../../$logdir/user;
}
export -f print_log

copy_player () {
	local from_world_state_file="$1"
	local to_world_state_file="$2"

	perl -e '
		sub load_all {
			open STATE, "<$_[0]";
			my $code = join " ", <STATE>;
			$code =~ s/\n//g;
			close STATE;
			eval($code);
		}

		sub save_all {
			use Data::Dumper;

			$result = Data::Dumper->Dump([\@objects], ["\*objects"]);
			$result .= Data::Dumper->Dump([\%state], ["\*state"]);
			$result .= Data::Dumper->Dump([$player_id], ["\*player_id"]);
			$result .= Data::Dumper->Dump([$status], ["\*status"]);

			open STATE, ">$_[0]";
			print STATE $result;
			close STATE;
		}

		load_all $ARGV[0];

		@from_objects = @objects;
		$from_player_id = $player_id;
		$from_player = $from_objects[$from_player_id];

		undef @objects;
		undef %state;

		load_all $ARGV[1];

		@from_objects = @objects;
		$player_id ||= 0;
		$from_player->{id} = $player_id;
		$objects[$player_id] = $from_player;

		save_all $ARGV[1];

	' "$from_world_state_file" "$to_world_state_file"
}
export -f copy_player

read_key () {
	while read cmd
	do
		if [[ $cmd = user:key=q ]]
		then
			break 2
		elif [[ $cmd = user:key* ]]
		then
			break
		fi
	done
}
export -f read_key

show_error () {
	echo out:print:`clear`error=$error;
	read_key
	print_log
	read_key
}
export -f show_error

get_exit_status () {
	local state_file="$1"
	perl -e '
		open STATE, "<'"$state_file"'";
		my $code = join " ", <STATE>;
		$code =~ s/\n//g;
		close STATE;
		eval($code);
		print "$status\n";
	'
}
export -f get_exit_status

set_status () {
	local new_status="$1"
	sed -i '/\$status/'"s|= .*|= '$new_status';|" $STATE
}
export -f set_status

look_up_dest () {
	perl -e '
		$depart = "'"$1"'";

		while (<>) {
			s/#.*//;	# Skip comments.

			if (/^\s*$depart ?-> ?(\S+)/) {
				print "$1\n";
				exit;
			}
		}
	' < portals.txt
}
export -f look_up_dest

teleport () {
	local depart=$1
	local dest

	dest=$(look_up_dest $depart)
		echo "$depart : $dest" >> port.dbg
	level=${dest%%/*}
	out_portal=${dest#*/}

		echo "$level $out_portal $dest" >> port.dbg
	if [ ! -d "$level" ] || [ ! "$out_portal" ] || [[ ! $dest =~ .+/.+/.+ ]]
	then
		echo no portal >> port.dbg
		dest=$depart
		level=${dest%%/*}
		out_portal=${dest#*/}
	else
		echo success portal >> port.dbg
	fi
	
	from_state=$STATE
	STATE=/tmp/$$-state-$level

	cp $from_state state_from.txt
	cp $STATE state_to_old.txt
	copy_player $from_state $STATE

	if [ ! -e $STATE ]
	then
		echo '$status = ' > $STATE
		echo '$dont_spawn = 1;' >> $STATE
	fi

	set_status "Teleported to $dest"
	cp $STATE state_to_new.txt
	echo set_status "Teleported to $dest" >> port.dbg
}
export -f teleport

