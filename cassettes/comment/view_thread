#!/bin/bash

cd `dirname $0`
THREAD_F=board/$board/$THREAD
export THREAD_F
clear=$'\x1b[H\x1b[2J'
echo "out:print:$clear"

refresh_thread()
{
	thread=$(./show_thread $THREAD_F)

	stty -icanon -echo <&$stdin
	
	thrlen=0
	while read
	do
		((thrlen++))
	done <<<"$thread"
}

print_thread()
{
	#../misc/to_consolemode
	echo -e "out:print:\e[H"
	end=$1
	start=$((end-rows))
	((end-=2))
	scr="$(sed -n $start,${end}p <<<"$thread")"
	echo "$scr"
#	sleep 10
	#../misc/from_consolemode
	echo -e "out:print:\e[$((rows));1H\e[2K\e[Gw - up; s - down"
	td="[0-9]\{2\}"
	head -n1 <<<"$scr" | grep -q "$td$td-$td-$td $td:$td" &&
		echo "out:print:; r - reply"
}

refresh_thread

size=$(stty size <&$stdin)
rows=${size% *}
curend=$((rows+1))
print_thread $curend

proc_cmd()
{
	if [[ $1 == user:key=* ]]
	then
		k="${1#user:key=}"
		if [[ $k == q ]]
		then
			exit
		elif [[ $k == w ]]
		then
			((curend-1>rows)) &&
				((--curend))
		elif [[ $k == s ]]
		then
			((curend+1<rows+thrlen)) &&
				((++curend))
		elif [[ $k == r ]]
		then
			consolemode ./post
			refresh_thread
		fi	
	fi
	print_thread $curend

}

while IFS= read -r cmd; do proc_cmd $cmd; done
