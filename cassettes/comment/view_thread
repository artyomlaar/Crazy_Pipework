#!/bin/bash

# $board is in env.

THREAD=$1

THREAD_F=board/$board/$THREAD
export THREAD_F
export THREAD

clear=$'\x1b[0m\x1b[H\x1b[2J'
echo "out:print:$clear"

td="[0-9]\{2\}"

refresh_thread()
{
	echo "out:print:$clear"
	# thread=$(./show_thread $THREAD_F)
	thread=$(./show_post $board $THREAD 1)

	echo "$thread" >/crazy_pipework/debug_thread.txt

	stty -icanon -echo <&$stdin
	
	thrlen=0
	while read
	do
		((thrlen++))
	done <<<"$thread"
}

at_thread_header() {
	head -n1 <<<"$1" |
		grep -q "out:printc:$td$td-$td-$td $td:$td"
}


get_current_post_id() {
	head -n1 <<<"$1" | 
		sed "s/^out:printc:$td$td-$td-$td $td:$td.*#\([0-9]\+\).*/\1/"
}

print_thread()
{
	echo -e "out:print:\e[H\e[0m"
	end=$1

	if ((end == oldpos+1))
	then
		((end-=2))
		start=$((end-0))
		echo -e "out:print:\e[$((end))H\e[2K"
	else
		start=$((end-rows))
		((end-=2))
	fi
	oldpos=$1

	scr="$(sed -n $start,${end}p <<<"$thread")"
	prs_start=$((end-rows+2))
	prs_scr="$(sed -n $prs_start,${end}p <<<"$thread")"

	if [ -z "$scr" ]
	then
		scr=$'out:printl:'
	fi

	echo "$scr"
	echo -e "out:print:\e[$((rows));1H\e[2K\e[Gw - up; s - down"

	if at_thread_header "$prs_scr"
	then
		c_post=$(get_current_post_id "$prs_scr" || echo 0)

               	echo "out:print:; r - reply"
	else 
		unset c_post
	fi

}


refresh_thread

size=$(stty size <&$stdin)
rows=${size% *}
prows=$((rows-1))
curend=$((rows+1))
print_thread $curend

proc_cmd()
{
	if [[ $1 == user:key=* ]]
	then
		k="${1#user:key=}"
		if [[ $k == q ]]
		then
			exit
		elif [[ $k == w ]]
		then
			((curend-1>rows)) &&
				((--curend))
		elif [[ $k == s ]]
		then
			((curend+1<rows+thrlen)) &&
				((++curend))
		elif [[ $k == W ]]
		then
			((curend=(curend-rows>rows)?curend-prows:rows+1))
		elif [[ $k == S ]]
		then
			((curend=(curend+rows<rows+thrlen)?curend+prows:rows+thrlen))
			echo "out:print:$clear"
		elif [[ $k == r ]]
		then
			if [ "$c_post" ]
			then
				c_post=$c_post \
				THREAD_F=$THREAD_F \
				THREAD=$THREAD \
				./post_menu
				refresh_thread
			fi
		fi	
	fi
	print_thread $curend

}

while IFS= read -r cmd; do proc_cmd $cmd; done


