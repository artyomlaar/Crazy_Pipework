#!/bin/bash

cd `dirname $0`

clear=$'\x1b[0m\x1b[H\x1b[2J'
postcount=board/$board/postcount
echo "out:print:$clear"

mk_thread()
{
	THREAD_F=tmp/$XSID consolemode ./post
	get=$(cat $postcount)
	echo $((++get)) >$postcount
	cat tmp/$XSID >board/$board/$get
	rm  tmp/$XSID 
}

view_board()
{
	echo out:printl:$board - $boardname

	for i in `ls -t board/$board/[0-9]*`
	do
		short=1 threadtail=5 ./show_thread $i
	done
}

refresh_board()
{
	thread=$(view_board)
	
	stty -icanon -echo <&$stdin
	
	thrlen=0
	while read
	do
		((thrlen++))
	done <<<"$thread"
}

print_thread()
{
	#../misc/to_consolemode
	c_thread=""
	echo -e "out:print:\e[H"
	end=$1
	start=$((end-rows))
	((end-=2))
	scr="$(sed -n $start,${end}p <<<"$thread")"
	echo "$scr"
#	sleep 10
	#../misc/from_consolemode
	echo -e "out:print:\e[$((rows));1H\e[2K\e[Gw - up; s - down; n - new thread"
	td="[0-9]\{2\}"
	head -n1 <<<"$scr" | 
		grep -q "^out:printl:[^ ]\+$td$td-$td-$td $td:$td.*thread_" &&
		{
			c_thread=$( head -n1 <<<"$scr" | 
				sed "s/^out:printl:[^ ]\+$td$td-$td-$td $td:$td.*thread_\([0-9]\+\).*/\1/" )

			echo "out:print:; r - reply"
		}
}

refresh_board


size=$(stty size <&$stdin)
rows=${size% *}
curend=$((rows+1))
print_thread $curend

proc_cmd()
{
	if [[ $1 == user:key=* ]]
	then
		k="${1#user:key=}"
		if [[ $k == q ]]
		then
			exit
		elif [[ $k == w ]]
		then
			((curend-1>rows)) &&
				((--curend))
		elif [[ $k == s ]]
		then
			((curend+1<rows+thrlen)) &&
				((++curend))
		elif [[ $k == r ]]
		then
			if [ "$c_thread" ]
			then
				THREAD=$c_thread ./view_thread
				refresh_board
			fi
		elif [[ $k == n ]]
		then
			mk_thread
			refresh_board
		fi	
	fi
	print_thread $curend

}

while IFS= read -r cmd; do proc_cmd $cmd; done
