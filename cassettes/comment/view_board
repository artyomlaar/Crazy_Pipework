#!/bin/bash

cd `dirname $0`

# From env.
board=${1-/}
dir_board=$board
board=$board/_/

clear=$'\x1b[0m\x1b[H\x1b[2J'
postcount=board/$board/post_count
board_title="$(cat board/$board/board_title)"
echo "out:print:$clear"

view_board()
{
	echo -e "out:printl:\e[2K    $dir_board - $board_title"

	for i in `ls -t board/$board/[0-9]*`
	do
		short=1 threadtail=5 ./show_thread $i
	done
}

get_current_post_id() {
	local sig="out:printc:$td$td-$td-$td $td:$td.*thread_"
	c_thread=$(
		head -n1 <<<"$1" | 
		perl -p -e "s/^$sig(\d+).*/\1/ or exit 1"
	)
}

refresh_board()
{
	echo "out:print:$clear"
	thread=$(view_board)
	
	stty -icanon -echo <&$stdin
	
	thrlen=0
	while read
	do
		((thrlen++))
	done <<<"$thread"
}

print_thread()
{
	c_thread=""
	echo -e "out:print:\e[H\e[0m"
	end=$1
	if ((end == oldpos+1))
	then
		((end-=2))
		start=$((end-0))
		echo -e "out:print:\e[$((end))H\e[2K"
	else
		start=$((end-rows))
		((end-=2))
	fi
	scr="$(sed -n $start,${end}p <<<"$thread")"
	prs_start=$((end-rows+2))
	prs_scr="$(sed -n $prs_start,${end}p <<<"$thread")"
	if [ -z "$scr" ]
	then
		scr=$'out:printl:'
	fi
	echo "$scr"
	echo -e "out:print:\e[$((rows));1H\e[2K\e[Gw - up; s - down; n - new thread"
	td="[0-9]\{2\}"
	td="\d{2}"
	if [ "$((curend-1))" = "$rows" ]
	then
		echo "out:print:; r - sub-boards"
	fi

	if get_current_post_id "$prs_scr"
        then
                echo "out:print:; r - reply"
	fi
	
	oldpos=$1
}

check_password() {
	local real_password="$(cat board/$board/admin_password)" 
	local prompt=$'Admin Password: '
	local p="[a-z0-9_]+"

	CURS_POS=16 edit_variable res "$prompt"
	password="$(get_text_data "Admin Password:" "$p" <<<"$res")"

	# Exit status:
	[ "$password" = "$real_password" ]
}

edit_board() {
	local name="$(cat board/$board/board_name)" 
	local title="$(cat board/$board/board_title)" 
	local password="$(cat board/$board/admin_password)" 
        local prompt="	Edit Board
Board name(read-only): $name
Board title: $title
Admin Password: $password

	Delete:
Delete thread(number):
Delete post(number):
Delete whole thread(yes/no):"
        local p="[a-z0-9_]+"
        CURS_POS=35 edit_variable res "$prompt"

        password="$(get_text_data "Admin Password:" "$p" <<<"$res")"
        title="$(get_text_data "Board title:" ".*" <<<"$res")"

        if [ "$title" ]
        then
                echo "$title" >board/$board/board_title
	fi

        if [ "$password" ]
        then
		echo "$password" >board/$board/admin_password
        fi
}

init() {
	refresh_board

	size=$(stty size <&$stdin)
	rows=${size% *}
	prows=$((rows-1))
	curend=$((rows+1))
	print_thread $curend
}

proc_cmd()
{
	if [[ $1 == user:key=* ]]
	then
		k="${1#user:key=}"
		if [[ $k == q ]]
		then
			exit
		elif [[ $k == w ]]
		then
			((curend-1>rows)) &&
				((--curend))
		elif [[ $k == s ]]
		then
			((curend<rows+thrlen)) &&
				((++curend))
		elif [[ $k == W ]]
		then
			((curend=(curend-rows>rows)?curend-prows:rows+1))
		elif [[ $k == S ]]
		then
			((curend=(curend+rows<rows+thrlen)?curend+prows:rows+thrlen))
			echo "out:print:$clear"
		elif [[ $k == r ]]
		then
			if [ "$((curend-1))" = "$rows" ]
			then
				./view_sub_boards $dir_board
			elif [ "$c_thread" ]
			then
				./view_thread $board $c_thread 
				
				refresh_board
			fi
		elif [[ $k == n ]]
		then
			./post_menu $board
			refresh_board
		elif [[ $k == a ]]
		then
			if check_password
			then
				edit_board
			fi
		fi	
	fi
	print_thread $curend

}
init
while IFS= read -r cmd; do proc_cmd $cmd; done
