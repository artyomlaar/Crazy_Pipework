#!/bin/bash

XSID=${XSID-$$}
HOME=${HOME-/home/`whoami`} # home is unset when run from xinetd
PIPEDIR="${pdir-"`dirname $0`/pipe/$XSID"}" # it can be set from server.bash
export ISPEED=120
#export COREPID=$$

#export -n pdir
export pdir="$PIPEDIR"
export BINDIR=./bin
export logdir=log/$XSID
export menu_fg=7 menu_bg=4
export XSID
declare -A pidbyid cmdbypid
mkdir $logdir

cd `dirname $0`

if [ $IN_CHROOT ]
then
	export PATH=$PATH:/crazy_pipework/misc
else
	export PATH=$PATH:`pwd`/misc
fi

[ -d "$PIPEDIR" ] || mkdir "$PIPEDIR"

#for i in "$PIPEDIR/../"*; do ps -p ${i##*/} &>/dev/null || rm -r $i; done

to_loop=$PIPEDIR/to_loop
from_loop=$PIPEDIR/from_loop

exec {stdout}>&1
exec {stdin}<&0

#trap 'tput sgr0; clear; echo killed; kill `ps|sed "1d;s/^ *//"|cut -f1 -d\ |grep -v $PPID`;' EXIT INT QUIT

#trap 'tput sgr0; clear; kill 0' EXIT INT QUIT
trap 'kill 0' EXIT INT QUIT

#trap 'tput sgr0; kill 0' EXIT INT QUIT

source "$BINDIR/include"

linebufferedcat()
{
	cat
	# while read a; do echo $a; done
	# grep --line-buffered ''
}

add_module() {
	local cmd_id="$1"
	local cmd="$2"

	mkpipe $cmd_id

	$cmd <$PIPEDIR/$cmd_id >$PIPEDIR/to_loop_$cmd_id 2>$logdir/$cmd_id &

	pidbyid[$cmd_id]=$!
	cmdbyid[$cmd_id]=$cmd

	# Is that needed anymore?
	for ((i=0; 1; i++))
	do
		[ -z "${pattern[i]}" ] && pattern[i]=$1 && break 
	done

	echo "main:add:$cmd_id"
}

init_cmds()
{
		add_module "mod" "$BINDIR/mod"
		add_module "user" "$BINDIR/user"
		#echo "mod:set_io:$stdin:$stdout"
}

mkpipe()
{
	[ ! -p "$PIPEDIR/$1" ] && mkfifo "$PIPEDIR/$1" 
	[ ! -p "$PIPEDIR/to_loop_$1" ] && mkfifo "$PIPEDIR/to_loop_$1" 
}

mkpipe "${to_loop##*/}"
mkpipe "${from_loop##*/}"

echo to_loop

# echo logdir=$logdir
# echo `pwd`


linebufferedcat <$to_loop >$from_loop &

export stdin stdout

{ init_cmds; cat <$from_loop; } |  # tee log/bad1-$$ | # tee  >(cat >&$stdout) |
./core >&$to_loop

#wait ${pidbyid[mod]} 
echo wait
wait

rm -r "$PIPEDIR"

#echo main loop terminated
